worker_processes ${{NUM_WORKERS}};
error_log stderr notice;
daemon off;
env LAPIS_ENVIRONMENT;

events {
    worker_connections 1024;
}

http {
    include mime.types;
    client_max_body_size 15m;
    lua_shared_dict memory_usage 2m;

    upstream database {
        postgres_server ${{pg POSTGRESQL_URL}};
    }

    server {
        listen ${{PORT}};
        lua_code_cache ${{CODE_CACHE}};

        location / {
            default_type text/html;
            set $_url "";
            content_by_lua_file "web.lua";
        }

        location /admin/ {
          auth_basic "Restricted";
          auth_basic_user_file secret/htpasswd;

          default_type text/html;
          set $_url "";
          content_by_lua_file "web.lua";
        }

        location ~ /manifests/([^/]*)/(.+) {
          default_type text/x-lua;

          rewrite_by_lua_file "serve_file.lua";
          resolver 8.8.8.8;
          proxy_http_version 1.1;
          proxy_pass $_url;
        }

        location ~ ^/([^/]*?\.(?:rock|rockspec))$ {
          default_type text/x-lua;

          rewrite_by_lua_file "serve_file.lua";
          resolver 8.8.8.8;
          proxy_http_version 1.1;
          proxy_pass $_url;
        }

        location /static/ {
          alias static/;
        }

        location /favicon.ico {
          alias static/favicon.ico;
        }

        location = /query {
            internal;
            postgres_pass database;
            postgres_query $echo_request_body;
        }

        location = /proxy {
            internal;

            rewrite_by_lua "
                local req = ngx.req

                for k,v in pairs(req.get_headers()) do
                    if k ~= 'content-length' then
                        req.clear_header(k)
                    end
                end

                if ngx.ctx.headers then
                    for k,v in pairs(ngx.ctx.headers) do
                        req.set_header(k, v)
                    end
                end
            ";

            resolver 8.8.8.8;
            proxy_http_version 1.1;
            proxy_pass $_url;
        }
    }
}